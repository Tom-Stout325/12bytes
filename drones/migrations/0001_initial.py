# Generated by Django 4.2.20 on 2025-08-02 00:45

import django.core.validators
from django.db import migrations, models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='DroneIncidentReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_date', models.DateField()),
                ('reported_by', models.CharField(max_length=100)),
                ('contact', models.CharField(max_length=100)),
                ('role', models.CharField(max_length=100)),
                ('event_date', models.DateField()),
                ('event_time', models.TimeField()),
                ('location', models.CharField(max_length=200)),
                ('event_type', models.CharField(max_length=20)),
                ('description', models.TextField()),
                ('injuries', models.BooleanField(default=False)),
                ('injury_details', models.TextField(blank=True)),
                ('damage', models.BooleanField(default=False)),
                ('damage_cost', models.CharField(blank=True, max_length=100)),
                ('damage_desc', models.TextField(blank=True)),
                ('drone_model', models.CharField(max_length=100)),
                ('registration', models.CharField(max_length=100)),
                ('controller', models.CharField(max_length=100)),
                ('payload', models.CharField(max_length=100)),
                ('battery', models.CharField(max_length=50)),
                ('weather', models.CharField(max_length=100)),
                ('wind', models.CharField(max_length=50)),
                ('temperature', models.CharField(max_length=50)),
                ('lighting', models.CharField(max_length=100)),
                ('witnesses', models.BooleanField(default=False)),
                ('witness_details', models.TextField(blank=True)),
                ('emergency', models.BooleanField(default=False)),
                ('agency_response', models.TextField(blank=True)),
                ('scene_action', models.TextField(blank=True)),
                ('faa_report', models.BooleanField(default=False)),
                ('faa_ref', models.CharField(blank=True, max_length=100)),
                ('cause', models.TextField(blank=True)),
                ('notes', models.TextField(blank=True)),
                ('signature', models.CharField(max_length=100)),
                ('sign_date', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='Equipment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('equipment_type', models.CharField(choices=[('Drone', 'Drone'), ('Controller', 'Controller'), ('Battery', 'Battery'), ('Charger', 'Charger'), ('Accessory', 'Accessory'), ('Other', 'Other')], max_length=50)),
                ('brand', models.CharField(blank=True, max_length=100)),
                ('model', models.CharField(blank=True, max_length=200)),
                ('serial_number', models.CharField(blank=True, max_length=200)),
                ('faa_number', models.CharField(blank=True, max_length=100)),
                ('faa_certificate', models.FileField(blank=True, null=True, upload_to='registrations/', validators=[django.core.validators.FileExtensionValidator(['jpg', 'jpeg', 'png', 'pdf'])])),
                ('purchase_date', models.DateField(blank=True, null=True)),
                ('purchase_cost', models.DecimalField(blank=True, decimal_places=2, help_text='Enter the original purchase cost of the equipment.', max_digits=10, null=True)),
                ('receipt', models.FileField(blank=True, null=True, upload_to='receipts/', validators=[django.core.validators.FileExtensionValidator(['jpg', 'jpeg', 'png', 'pdf'])])),
                ('date_sold', models.DateField(blank=True, null=True)),
                ('sale_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('deducted_full_cost', models.BooleanField(default=True)),
                ('active', models.BooleanField(default='True')),
                ('notes', models.TextField(blank=True)),
            ],
            options={
                'verbose_name_plural': 'Equipment',
                'ordering': ['equipment_type', 'name'],
            },
        ),
        migrations.CreateModel(
            name='FlightLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('flight_date', models.DateField()),
                ('flight_title', models.CharField(blank=True, max_length=200)),
                ('flight_description', models.TextField(blank=True)),
                ('pilot_in_command', models.CharField(blank=True, max_length=100)),
                ('license_number', models.CharField(blank=True, max_length=100)),
                ('flight_application', models.CharField(blank=True, max_length=100)),
                ('remote_id', models.CharField(blank=True, max_length=100)),
                ('takeoff_latlong', models.CharField(blank=True, max_length=100)),
                ('takeoff_address', models.CharField(blank=True, max_length=255)),
                ('landing_time', models.TimeField(blank=True, null=True)),
                ('air_time', models.DurationField(blank=True, null=True)),
                ('above_sea_level_ft', models.FloatField(blank=True, null=True)),
                ('drone_name', models.CharField(blank=True, max_length=100)),
                ('drone_type', models.CharField(blank=True, max_length=100)),
                ('drone_serial', models.CharField(blank=True, max_length=100)),
                ('drone_reg_number', models.CharField(blank=True, max_length=100)),
                ('battery_name', models.CharField(blank=True, max_length=100)),
                ('battery_serial_printed', models.CharField(blank=True, max_length=100)),
                ('battery_serial_internal', models.CharField(blank=True, max_length=100)),
                ('takeoff_battery_pct', models.IntegerField(blank=True, null=True)),
                ('takeoff_mah', models.IntegerField(blank=True, null=True)),
                ('takeoff_volts', models.FloatField(blank=True, null=True)),
                ('landing_battery_pct', models.IntegerField(blank=True, null=True)),
                ('landing_mah', models.IntegerField(blank=True, null=True)),
                ('landing_volts', models.FloatField(blank=True, null=True)),
                ('max_altitude_ft', models.FloatField(blank=True, null=True)),
                ('max_distance_ft', models.FloatField(blank=True, null=True)),
                ('max_battery_temp_f', models.FloatField(blank=True, null=True)),
                ('max_speed_mph', models.FloatField(blank=True, null=True)),
                ('total_mileage_ft', models.FloatField(blank=True, null=True)),
                ('signal_score', models.FloatField(blank=True, null=True)),
                ('max_compass_rate', models.FloatField(blank=True, null=True)),
                ('avg_wind', models.FloatField(blank=True, null=True)),
                ('max_gust', models.FloatField(blank=True, null=True)),
                ('signal_losses', models.IntegerField(blank=True, null=True)),
                ('ground_weather_summary', models.CharField(blank=True, max_length=255)),
                ('ground_temp_f', models.FloatField(blank=True, null=True)),
                ('visibility_miles', models.FloatField(blank=True, null=True)),
                ('wind_speed', models.FloatField(blank=True, null=True)),
                ('wind_direction', models.CharField(blank=True, max_length=50)),
                ('cloud_cover', models.CharField(blank=True, max_length=100)),
                ('humidity_pct', models.IntegerField(blank=True, null=True)),
                ('dew_point_f', models.FloatField(blank=True, null=True)),
                ('pressure_inhg', models.FloatField(blank=True, null=True)),
                ('rain_rate', models.CharField(blank=True, max_length=50)),
                ('rain_chance', models.CharField(blank=True, max_length=50)),
                ('sunrise', models.CharField(blank=True, max_length=50)),
                ('sunset', models.CharField(blank=True, max_length=50)),
                ('moon_phase', models.CharField(blank=True, max_length=50)),
                ('moon_visibility', models.CharField(blank=True, max_length=50)),
                ('photos', models.IntegerField(blank=True, null=True)),
                ('videos', models.IntegerField(blank=True, null=True)),
                ('notes', models.TextField(blank=True)),
                ('tags', models.CharField(blank=True, max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='GeneralDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('category', models.CharField(choices=[('Insurance', 'Insurance'), ('FAA', 'FAA Waivers'), ('Registrations', 'Drone Registrations'), ('Event', 'Event Instructions'), ('Policies', 'Policies'), ('Compliance', 'Compliance'), ('Legal', 'Legal'), ('Other', 'Other')], max_length=50)),
                ('description', models.TextField(blank=True)),
                ('file', models.FileField(upload_to='general_documents/')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='SOPDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('file', models.FileField(upload_to='sop_docs/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
    ]
